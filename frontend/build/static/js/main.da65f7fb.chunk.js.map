{"version":3,"sources":["components/plan/Toolbar.js","API/ApiCovid.js","components/Graph.js","components/WidgetsCarte.js","components/Country.js","admin.js","App.js","index.js"],"names":["toolbar","props","className","href","to","url","fetchdata","country","a","changableurl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","dailydata","modifieddata","map","total","date","reportDate","Graph","useState","dailyydata","setdailydata","useEffect","Fetchapi","Linechart","length","labels","datasets","label","fill","borderColor","Barchart","backgroundColor","value","options","legend","display","title","text","WidgetsCarte","Grid","container","spacing","justify","xs","md","CardContent","Typography","variant","start","end","duration","separator","Date","toDateString","gutterBottom","Country","handlecountrychange","FormControl","NativeSelect","defaultValue","onChange","e","target","admin","color","Component","App","state","fetchdataa","setState","this","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da65f7fb.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Link} from \"react-router-dom\";\n\nimport'./Toolbar.css';\n\nconst toolbar = props => (\n\n    <header className=\"toolbar\">\n        <nav className=\"toolbar_nav\">\n\n\n            <div></div>\n            <div className=\"toolbar_logo\"><a href=\"/\">Dash-Bord</a></div>\n            <div className=\"espace\"/>\n\n            <div className=\"toolbar_nav_items\">\n                <ul>\n                \n    \n    \n   \n                    \n                    \n                    <li><Link href=\"/admin\" to=\"/admin\">Admin</Link></li>\n                    \n                </ul>\n\n\n            </div>\n        </nav>\n\n\n\n\n\n    </header>\n);\nexport default toolbar;","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\n//recuperer la data selon le pays\nexport const fetchdata = async ( country )=>{\n    let changableurl = url;\n\n    if(country){\n        changableurl = `${url}/countries/${country}`;\n    }\n\n    try{\n\nconst {data : {confirmed , recovered , deaths , lastUpdate} } = await axios.get(changableurl);\nreturn {confirmed , recovered , deaths , lastUpdate};\n   \n}\n    catch(error){\nconsole.log(error);\n    }\n}\n//recupere la data modifiÃ©\n\nexport const dailydata = async ()=>{\n    try{\n\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifieddata = data.map((dailydata)=>({\n            confirmed : dailydata.confirmed.total,\n            deaths:dailydata.deaths.total,\n            date:dailydata.reportDate,\n        }));\n\n        return modifieddata;\n\n    }catch(error){\n        console.log(error);\n    }\n}\n\n//recuperer le pays \nexport const fetchcountries = async()=>{\n    try{\n\nconst { data : {countries}} = await axios.get(`${url}/countries`);\n\nreturn countries.map((country) => country.name);\n\n    }catch(error){\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport {Line, Bar } from 'react-chartjs-2';\nimport { dailydata } from '../API/ApiCovid';\n\nimport \"./Graph.css\";\n\nconst Graph = ({data : {confirmed,recovered,deaths},country}) => {\n    const [dailyydata, setdailydata] = useState([]);\n\n    useEffect(() => {\n        const Fetchapi = async () => {\n            setdailydata(await dailydata());\n        }\n\n        // console.log(dailyydata);\n\n        Fetchapi();\n    }, []);\n    const Linechart = (\n        dailyydata.length ?\n            (<Line\n                data={{\n                    labels: dailyydata.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyydata.map(({ confirmed }) => confirmed),\n                        label: \"Infected\",\n                        fill: true,\n                        borderColor: \"#3333ff\",\n                    }, {\n                        data: dailyydata.map(({ deaths }) => deaths),\n                        label: \"Deaths\",\n                        fill: true,\n                        borderColor: \"red\",\n                    }],\n                }}\n            />) : null\n    );\n\n    const Barchart =(\nconfirmed?\n<Bar \ndata={{\n    labels:['Infected','Recovered', 'Deaths'],\n    datasets:[{\n        label:'people',\n        backgroundColor:['blue','green','red'],\n        data:[confirmed.value , recovered.value, deaths.value]\n    }]\n}}\noptions={{\n    legend:{display:false},\n    title:{display:true , text:`Current state in ${country}`},\n}}\n/>\n:null\n    );\n\n    return (\n       <div className=\"graph\">\n{country ? Barchart : Linechart}\n       </div>\n    )\n}\n\n\n/*\nconst Graph = {\n    const data = {\n        labels : ['Mars','avril','mai','juin'],\n\n\n\n        datasets :[\n            {\n                label : 'nombre de cas',\n                data : [20,30,40,25]\n\n\n            }\n            \n        ]\n\n\n\n    }\n        \n          \n      \n    return <Line data={data} />\n        \n\n\n}\n  \n*/\n   \n\nexport default Graph;","import React from 'react';\nimport { CardContent, Typography, Grid } from '@material-ui/core';\nimport './WidgetsCarte.css';\nimport CountUp from 'react-countup';\n\n\nconst WidgetsCarte = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    // console.log(confirmed)\n    if (!confirmed) {\n        return \"Loading...\";\n    }\n    return (\n        \n        <div className=\"Carte\">\n            <Grid container spacing={3} justify=\"center\">\n\n                <Grid xs={8} md={3} className=\"Carte1\">\n                    <CardContent>\n                        <Typography >Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography >{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            \n\n                <Grid xs={8} md={3} className=\"Carte2\">\n                    <CardContent>\n                        <Typography  gutterBottom>Recoved</Typography>\n                     <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography >{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Recoved cases from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n               <Grid xs={8} md={3} className=\"Carte3\">\n                    <CardContent>\n                        <Typography  gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography >{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Deaths from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default WidgetsCarte;","import React from 'react';\nimport {NativeSelect , FormControl} from '@material-ui/core';\nimport \"./Country.css\";\n\nconst Country = ({handlecountrychange}) =>{\n\n    return(\n       <FormControl className=\"pays\">\n           <NativeSelect defaultValue=\"\" onChange={(e)=>handlecountrychange(e.target.value)}>\n               <option value=\"\">Global</option>\n               <option value=\"France\">France</option>\n           </NativeSelect>\n       </FormControl>\n    )\n}\nexport default Country;","import React,{Component} from 'react';\n\n\nimport Toolbar from './components/plan/Toolbar';\n\n\nclass admin extends Component{\n\n  render(){\n\n    return(\n      <div className='admin'>\n        \n          <Toolbar />\n          \n        <p color=\"red\">hello world</p>\n        \n        \n      </div>\n\n    );\n  }\n}\nexport default admin\n","import React,{Component} from 'react';\n\nimport './App.css';\nimport Toolbar from './components/plan/Toolbar';\nimport Graph from './components/Graph'\nimport { BrowserRouter as Router ,Route} from 'react-router-dom';\nimport WidgetsCarte from './components/WidgetsCarte';\nimport { fetchdata } from './API/ApiCovid';\nimport Country from './components/Country';\n\nimport admin from '../src/admin';\n\n\n\nclass App extends Component{\n  /*\n  state1={\n    loading:true\n  }\n  componentWillUnmount (){\n\n    setTimeout(()=>{\n      this.setState1 ({\n        loading : false\n\n      })\n\n    },5000);\n  }\n  */\n\n  state={\n    data :{},\n    country:\"\"\n  }\n\n\n\n  async componentDidMount(){\n  const fetchdataa = await fetchdata();\n \n  this.setState({\n    data:fetchdataa\n  });\n}\n\nhandlecountrychange = async(country)=>\n{\n  const fetchdataa = await fetchdata(country);\n  this.setState({\n    data:fetchdataa,\n    country:country\n  });\n}\n\n  render(){\n/*\n    if(this.state1.loading){\n      \n    }\n    */\n    const {data , country} = this.state;\n\n    return(\n\n      \n      <div >\n        <main className='App'>\n\n\n        \n        <Router>\n        <Toolbar />\n        \n       \n        <Route path='/admin' component={admin}/>\n\n        <Country handlecountrychange={this.handlecountrychange} />\n\n  \n        <Graph data={data} country={country}/>\n\n     \n        <WidgetsCarte data={data}/>\n        </Router>\n\n\n\n\n        </main>\n        \n        \n        \n        \n          \n            \n         \n\n        </div>\n        \n\n        \n      \n\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}